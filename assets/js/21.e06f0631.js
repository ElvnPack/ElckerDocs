(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{438:function(t,e,a){"use strict";a.r(e);var r=a(21),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"开发说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发说明"}},[t._v("#")]),t._v(" 开发说明")]),t._v(" "),a("h3",{attrs:{id:"_1-文件位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件位置"}},[t._v("#")]),t._v(" 1.文件位置")]),t._v(" "),a("p",[t._v("build\\utils")]),t._v(" "),a("h3",{attrs:{id:"_2-编写规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-编写规范"}},[t._v("#")]),t._v(" 2.编写规范")]),t._v(" "),a("p",[t._v("1.满足 TS 语法规范；")]),t._v(" "),a("p",[t._v("2.涉及的类型需要在 build\\types 进行定义")]),t._v(" "),a("p",[t._v("3.模板")]),t._v(" "),a("div",{staticClass:"language-nodejs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 引入依赖库\nimport xxxx from 'xxxx';\n\n// 引入 类型\nimport xxxx from 'xxxx';\n\n// 定义实现体\nclass xxxxxUtils{\n\n}\n\n// 导出\nexport const xxxx = new xxxxxUtils();\n\n")])])]),a("h2",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API")]),t._v(" "),a("p",[t._v("封装工具类的使用说明")]),t._v(" "),a("h3",{attrs:{id:"cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" cookie")]),t._v(" "),a("p",[t._v("引入")]),t._v(" "),a("p",[t._v("import { ElckerCookie } from '~/utils/cookie';")]),t._v(" "),a("h4",{attrs:{id:"保存-set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保存-set"}},[t._v("#")]),t._v(" 保存 set")]),t._v(" "),a("p",[t._v("ElckerCookie.set(key: any, value: any, expires?: any, path = '/')")]),t._v(" "),a("blockquote",[a("p",[t._v("key: 属性名称（必传）\nvalue：属性值（必传）\nexpires：过期时间（选填）\npath：目录（必传） 默认值：'/'")])]),t._v(" "),a("h4",{attrs:{id:"获取-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取-get"}},[t._v("#")]),t._v(" 获取 get")]),t._v(" "),a("p",[t._v("ElckerCookie.get(key: any); key: 属性名称（必传）")]),t._v(" "),a("h4",{attrs:{id:"删除-remove"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除-remove"}},[t._v("#")]),t._v(" 删除 remove")]),t._v(" "),a("p",[t._v("ElckerCookie.remove(key: any, path = '/') key: 属性名称（必传）。path：目录（必传） 默认值：'/'")]),t._v(" "),a("h4",{attrs:{id:"获取全部-geteall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取全部-geteall"}},[t._v("#")]),t._v(" 获取全部 geteAll")]),t._v(" "),a("p",[t._v("ElckerCookie.geteAll() 可以获取所有的属性及值")]),t._v(" "),a("h3",{attrs:{id:"axios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" axios")]),t._v(" "),a("p",[t._v("对请求交互工具进行封装以简化 Api")]),t._v(" "),a("p",[t._v("引入： import ElckerServiceApi from '~/utils/axios';")]),t._v(" "),a("p",[t._v("具体的使用模板")]),t._v(" "),a("div",{staticClass:"language-nodejs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nimport ElckerServiceApi from '~/utils/axios';\nclass xxxxService extends ElckerServiceApi {\n  // 定义公共地址前缀\n  private urlComPath = 'xxx';\n  xxxx(data: ElckerUser) {\n    return this.getRequest({\n      url: this.urlComPath + 'xxxx',\n      params: data,\n    });\n  }\n}\n\n// 单列模式返回对象\nlet xxxxApi;\nexport default (() => {\n  if (xxxxApi) return xxxxApi;\n  xxxxApi = new xxxxService();\n  return xxxxApi;\n})();\n\n")])])]),a("p",[t._v("封装了基于 restful 的 api getRequest/postRequest/putRequest/patchRequest/deleteRequest/")]),t._v(" "),a("h4",{attrs:{id:"参数说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数说明"}},[t._v("#")]),t._v(" 参数说明")]),t._v(" "),a("ul",[a("li",[t._v("headers, // 请求的头信息 默认值： 'Content-Type': 'application/json;charset=UTF-8'")]),t._v(" "),a("li",[t._v("method,")]),t._v(" "),a("li",[t._v("url,")]),t._v(" "),a("li",[t._v("data,")]),t._v(" "),a("li",[t._v("params,")]),t._v(" "),a("li",[t._v("responseType, // 响应的数据类型")]),t._v(" "),a("li",[t._v("auth, // token 密码")]),t._v(" "),a("li",[t._v("apiSate // VITE_APISATE 进行全局配置，（默认值为全局配置，不进行加密时，接口可设置值为 false） 对请求内容进行加密")])]),t._v(" "),a("h3",{attrs:{id:"storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[t._v("#")]),t._v(" storage")]),t._v(" "),a("p",[t._v("import { ElckerStorage } from '~/utils/storage';")]),t._v(" "),a("h4",{attrs:{id:"保存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保存"}},[t._v("#")]),t._v(" 保存")]),t._v(" "),a("p",[t._v('ElckerStorage.set("属性名称"，”属性值“，”过期时间？“，”路径？“)')]),t._v(" "),a("h4",{attrs:{id:"获取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取"}},[t._v("#")]),t._v(" 获取")]),t._v(" "),a("p",[t._v('ElckerStorage.get("属性名称");')]),t._v(" "),a("h4",{attrs:{id:"删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[t._v("#")]),t._v(" 删除")]),t._v(" "),a("p",[t._v('ElckerStorage.remove("属性名称",”路径？“)')]),t._v(" "),a("h3",{attrs:{id:"crypto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crypto"}},[t._v("#")]),t._v(" crypto")]),t._v(" "),a("p",[t._v("引入：")]),t._v(" "),a("p",[t._v("import { ElckerEncrypt, ElckerDecrypt } from '~/utils/crypto';")]),t._v(" "),a("h4",{attrs:{id:"解密-elckerdecrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解密-elckerdecrypt"}},[t._v("#")]),t._v(" 解密 ElckerDecrypt")]),t._v(" "),a("p",[t._v("ElckerDecrypt(密文)")]),t._v(" "),a("h4",{attrs:{id:"加密-elckerencrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加密-elckerencrypt"}},[t._v("#")]),t._v(" 加密 ElckerEncrypt")]),t._v(" "),a("p",[t._v('ElckerEncrypt("明文")')])])}),[],!1,null,null,null);e.default=s.exports}}]);