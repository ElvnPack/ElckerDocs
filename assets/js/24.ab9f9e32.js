(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{443:function(s,t,e){"use strict";e.r(t);var n=e(21),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("你需要了解并掌握 CSS 基础只是"),e("a",{attrs:{href:"https://www.w3school.com.cn/css/index.asp",target:"_blank",rel:"noopener noreferrer"}},[s._v("w3c-CSS 教程"),e("OutboundLink")],1),s._v("以及"),e("a",{attrs:{href:"https://lesscss.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("less"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("less 与 sass 的区别，请自行补脑。")]),s._v(" "),e("p",[s._v("PostCSS")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("PostCSS 是一款使用 JavaScript 插件对 CSS 实现转换的工具")])]),s._v(" "),e("li",[e("p",[s._v("PostCSS 拥有非常强大的插件，典型的比如 autoprefixer、cssnext、css modules 等。")])]),s._v(" "),e("li",[e("p",[s._v("PostCSS 插件的处理方式类似 CSS 预处理器，而非预处理器和后处理器。")])]),s._v(" "),e("li",[e("p",[s._v("PostCSS 并非优化 CSS 的工具，语法也并非 CSS 的新式语法。")])])]),s._v(" "),e("p",[s._v("Vite 自身已经集成 PostCSS，无需再次安装。另外也无需单独创建 PostCSS 配置文件，已集成到 vite.config.js 的 css 选项中。可直接配置 css.postcss 选项即可。Vite 将自动在*.vue 文件中所有的 style 标签以及所有导入的.css 文件中应用 PostCSS.")]),s._v(" "),e("h2",{attrs:{id:"taildwindcss"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#taildwindcss"}},[s._v("#")]),s._v(" TaildwindCSS")]),s._v(" "),e("p",[s._v("官方网站：https://www.tailwindcss.cn/docs/plugins")]),s._v(" "),e("ul",[e("li",[s._v("Tailwind CSS 是一款实用为主效用优先的 CSS 框架")]),s._v(" "),e("li",[s._v("TailwindCSS 作为 PostCSS 插件存在，将基础的 CSS 拆分为原子级别。")]),s._v(" "),e("li",[s._v("PostCSS 提供 Autoprefixer 插件用于补全各种浏览器前缀，兼容性更好。")])]),s._v(" "),e("h2",{attrs:{id:"深度选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#深度选择器"}},[s._v("#")]),s._v(" 深度选择器")]),s._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[s._v("<style scoped>\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* deep selectors */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v("::v-deep(.foo)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* shorthand */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v(":deep(.foo)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* targeting slot content */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v("::v-slotted(.foo)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* shorthand */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v(":slotted(.foo)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* one-off global rule */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v("::v-global(.foo)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* shorthand */")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token selector"}},[s._v(":global(.foo)")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n</style>\n\n")])])]),e("h2",{attrs:{id:"css-modules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-modules"}},[s._v("#")]),s._v(" CSS Modules")]),s._v(" "),e("p",[s._v("所有的 class 的名称和动画的名称默认属于本地作用域的 CSS 文件。所以 CSS Modules 不是一个官方的规范，也不是浏览器的一种机制，它是一种构建步骤中的一个进程。（构建通常需要 webpack 或者 browserify 的帮助）。通过构建工具的帮助，可以将 class 的名字或者选择器的名字作用域化。（类似命名空间化）。")]),s._v(" "),e("p",[s._v("通过构建工具来使指定 class 达到 scope 的过程。")]),s._v(" "),e("p",[s._v("css modules 优势")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("解决全局命名冲突问题 css modules 只关心组件本身 命名唯一")])]),s._v(" "),e("li",[e("p",[s._v("模块化 可以使用 composes 来引入自身模块中的样式以及另一个模块的样式")])]),s._v(" "),e("li",[e("p",[s._v("解决嵌套层次过深的问题 使用扁平化的类名")])])]),s._v(" "),e("p",[s._v("使用教程："),e("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/06/css_modules.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.ruanyifeng.com/blog/2016/06/css_modules.html"),e("OutboundLink")],1)]),s._v(" "),e("h2",{attrs:{id:"postcssimport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#postcssimport"}},[s._v("#")]),s._v(" postcssImport")]),s._v(" "),e("p",[s._v("PostCSS 通过@import 将样式表合并到一起，当需要通过@import 将第三方类库导入到主样式表时，首先需要运行的是@import 插件。")]),s._v(" "),e("p",[s._v("加上 reference 可以解决页面内重复引用导致实际生成的 style 样式表重复的问题")]),s._v(" "),e("p",[s._v("如：")]),s._v(" "),e("p",[s._v("@import (reference) '../../design/config.less';")])])}),[],!1,null,null,null);t.default=a.exports}}]);