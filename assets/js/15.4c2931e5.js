(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{431:function(n,t,e){"use strict";e.r(t);var a=e(21),s=Object(a.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("为适配当下开发场景的需求，EAdmin 将自身环境区分为3个环境，")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("开发环境，提供mock支持，帮助开发人员在服务未完成前进行项目的开发，")])]),n._v(" "),e("li",[e("p",[n._v("测试环境用于前端人员与后端服务的本地测试，")])]),n._v(" "),e("li",[e("p",[n._v("生产环境用于线上。")])])]),n._v(" "),e("p",[n._v("各个环境的详细配置内容参见：")]),n._v(" "),e("h2",{attrs:{id:"全局环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局环境配置"}},[n._v("#")]),n._v(" 全局环境配置")]),n._v(" "),e("div",{staticClass:"language-nodejs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 项目的页面文件地址配置 参见 ：https://www.npmjs.com/package/vite-plugin-pages\nVITE_PAGES_ALL = [[\"src/views\",\"\" ]]\n\n# 项目配置 注意：使用 VITE_ 开头的变量会被 vite 自动加载\n# ======================系统级别的配置==================================\n# 项目title名称\nVITE_TITLE = \"ElcKer-Inter-SPA\"\n# =======================应用级别的配置=================================\n# 系统的主页面\nVITE_PAGE_HOME = '/ElckerApp'\n# 系统的登录地址\nVITE_PAGE_LOGIN = '/Login'\n# 系统登录的请求地址\nVITE_URL_LOGIN = '/elckerApi/authService/login'\n# =======================应用安全级别的配置=================================\n# 启用请求时的加签及相应时的验签功能 需要参见更新说明\nVITE_APISATE= 'true'\n# ==========================压缩配置======================================\n# Whether to enable gzip or brotli compression\n# Optional: gzip | brotli | none\n# If you need multiple forms, you can use `,` to separate\nVITE_BUILD_COMPRESS = 'none'\n\n# Whether to delete origin files when using compress, default false\nVITE_BUILD_COMPRESS_DELETE_ORIGIN_FILE = false\n\n")])])]),e("h2",{attrs:{id:"开发环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境配置"}},[n._v("#")]),n._v(" 开发环境配置")]),n._v(" "),e("div",{staticClass:"language-nodejs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 日志的输出级别  'info' | 'warn' | 'error' | 'silent'\nVITE_LOGLEVEL = \"info\"\n# 是否使用 MOCK 数据\nVITE_USE_MOCK = true\n# 定义请求的基础URL, 方便跨域请求时使用 public path\nVITE_BASE_API = ''\n# 服务代理配置 此环境下无需配置但要存在\nVITE_SERVER_PROXY = [[\"/dev-api\",\"http://localhost:6001\"]]\n# 服务器地址\nVITE_SERVER_HOST = \"0.0.0.0\"\n# 服务器端口\nVITE_SERVER_PORT = \"6001\"\n# 是否使用https\nVITE_SERVER_HTTPS = false\n# cookie保存的域名，utils/cookie.js 要用  COOKIE 名称\nVITE_COOKIE_NAME='localhost'\n\n\n")])])]),e("h2",{attrs:{id:"测试环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试环境配置"}},[n._v("#")]),n._v(" 测试环境配置")]),n._v(" "),e("div",{staticClass:"language-nodejs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("# 日志的输出级别  'info' | 'warn' | 'error' | 'silent'\nVITE_LOGLEVEL = \"info\"\n# 是否使用 MOCK 数据\nVITE_USE_MOCK = \"false\"\n# 定义请求的基础URL, 方便跨域请求时使用 public path\nVITE_BASE_API = '/dev-api'\n# 服务代理配置 此环境下是必要的\nVITE_SERVER_PROXY = [[\"/dev-api\",\"https://localhost/\"]]\n# 服务器地址\nVITE_SERVER_HOST = \"0.0.0.0\"\n# 服务器端口\nVITE_SERVER_PORT = \"6001\"\n# 是否使用https\nVITE_SERVER_HTTPS = false\n# cookie保存的域名，utils/cookie.js 要用  COOKIE 名称\nVITE_COOKIE_NAME='localhost'\n\n\n")])])]),e("h2",{attrs:{id:"生产环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生产环境配置"}},[n._v("#")]),n._v(" 生产环境配置")]),n._v(" "),e("div",{staticClass:"language-nodejs extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\n# 日志的输出级别  'info' | 'warn' | 'error' | 'silent'\nVITE_LOGLEVEL = \"info\"\n# 是否使用 MOCK 数据\nVITE_USE_MOCK = true\n# 定义请求的基础URL, 方便跨域请求时使用  public path \n# 使用生产mock 时为空字符串 不使用mock时，根据实际情况配置\nVITE_BASE_API = ''\n# 服务代理配置\nVITE_SERVER_PROXY = [[\"/dev-api\",\"https://localhost:6001\"]]\n# 服务器地址\nVITE_SERVER_HOST = \"0.0.0.0\"\n# 服务器端口\nVITE_SERVER_PORT = \"6001\"\n# 是否使用https\nVITE_SERVER_HTTPS = false\n# cookie保存的域名，utils/cookie.js 要用  COOKIE 名称 IP地址或者域名\nVITE_COOKIE_NAME='localhost'\n\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);